swagger: "2.0"
info:
  description: 'Documentação da API de backend para a aplicação "Gestão de Condomínios"'
  version: "1.0.0"
  title: "Gestão de Condomínios"

host: "localhost:3333"
basePath: "/api"

#API name routes
tags:
  - name: "Authentication"
    description: "Rotas para funções de autenticação."
  - name: "Typologies"
    description: "Rotas para funções de tipologias."
  - name: "Roles"
    description: "Rotas para funções de roles de utilizadores."
  - name: "Users"
    description: "Rotas para funções de utilizadores."
  - name: "Units"
    description: "Rotas para funções de unidades de apartamento."
  - name: "ServiceTypes"
    description: "Rotas para funções de tipos de serviços."
  - name: "Suppliers"
    description: "Rotas para funções de fornecedores."
  - name: "Expenses"
    description: "Rotas para funções de despesas."
  - name: "PaymentMap"
    description: "Rotas para funções de mapas de pagamento."
  - name: "Revenues"
    description: "Rotas para funções de receitas."

#Schemes
schemes:
  - "http"

#API routes
paths:
  #Authentication (check responses)
  /sign-up:
    post:
      tags:
        - "Authentication"
      summary: "Registar utilizador."
      description: "Regista um novo utilizador na base de dados."
      operationId: "signUp"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Objeto com dados de utilizador."
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: string
              first_name:
                type: string
              last_name:
                type: string
              role_id:
                type: integer
              units_id:
                type: array
                items:
                  type: integer
                example: [1, 2, 3]
              NIF:
                type: string
              IBAN:
                type: string
              contacts:
                type: array
                items:
                  $ref: "#/definitions/PhoneList"
      responses:
        "200":
          description: "Utilizador registado com sucesso!"
          schema:
            $ref: "#/definitions/TrueResponse"
        "400":
          description: "Request inválido"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /sign-in:
    post:
      tags:
        - "Authentication"
      summary: "Criar sessão de utilizador."
      description: "Cria sessão de autenticação de um utilizador."
      operationId: "signIn"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Objeto com dados de autenticação."
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        "200":
          description: "Sign in com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/SignInData"
        "400":
          description: "Request inválido."
          schema:
            $ref: "#/definitions/EmptyResponse"
  /forgot-password:
    post:
      tags:
        - "Authentication"
      summary: "Esquecer password."
      description: "Envia email ao utilizador que esqueceu da password."
      operationId: "forgotPassword"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Objeto com dados para esquecer password."
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: string
      responses:
        "200":
          description: "Recuperação da Password com sucesso!"
          schema:
            $ref: "#/definitions/TrueResponse"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /reset-password:
    post:
      tags:
        - "Authentication"
      summary: "Redefinir password."
      description: "Redefine a password de um utilizador."
      operationId: "resetPassword"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Objeto com dados para redefinir uma password nova."
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: string
              token:
                type: string
              new_password:
                type: string
              new_password_repeat:
                type: string
      responses:
        "200":
          description: "Reset Password com sucesso!"
          schema:
            $ref: "#/definitions/TrueResponse"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/EmptyResponse"

  #Typologies
  /typologies:
    get:
      tags:
        - "Typologies"
      summary: "Buscar tipologias."
      description: "Retorna lista de todas as tipologias existentes."
      operationId: "getTypologies"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Todas as Tipologias retornadas com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/TypologiesList"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /typologies/{id}:
    get:
      tags:
        - "Typologies"
      summary: "Buscar tipologia."
      description: "Retorna uma tipologia por id."
      operationId: "getTypologyById"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID da tipologia."
          required: true
          type: "integer"
      responses:
        "200":
          description: "Tipologia retornada com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/Typology"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/EmptyResponse"
    post:
      tags:
        - "Typologies"
      summary: "Criar tipologia."
      description: "Cria uma nova tipologia."
      operationId: "postTypology"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Objeto com dados para criar tipologia."
          required: true
          schema:
            type: "object"
            properties:
              typology:
                type: string
                example: "T2"
      responses:
        "200":
          description: "Tipologia criada com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/Typology"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/EmptyResponse"
    put:
      tags:
        - "Typologies"
      summary: "Atualizar tipologia."
      description: "Atualiza os dados de uma tipologia."
      operationId: "putTypology"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID da tipologia."
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Objeto com dados para atualizar tipologia."
          required: true
          schema:
            type: "object"
            properties:
              typology:
                type: string
                example: "T2 Duplex"
      responses:
        "200":
          description: "Tipologia alterada com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/Typology"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/EmptyResponse"
    delete:
      tags:
        - "Typologies"
      summary: "Apagar tipologia."
      description: "Apaga uma tipologia existente."
      operationId: "deleteTypology"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID da tipologia."
          required: true
          type: "integer"
      responses:
        "200":
          description: "Tipologia removida com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                type: object
                properties: 
                  typology:
                    type: string
                  permilage:
                    type: integer
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /typologies/import:
    post:
      tags:
        - "Typologies"
      summary: "Importar tipologias."
      description: "Importa uma ou mais tipologias enviadas."
      operationId: "importTypologies"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Array de objetos de tipologias."
          required: true
          schema:
            type: "array"
            items:
              properties:
                typology:
                  type: string
                permilage:
                  type: integer
      responses:
        "200":
          description: "Tipologias importadas com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/TypologiesList"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/EmptyResponse"

  #Roles
  /roles:
    get:
      tags:
        - "Roles"
      summary: "Buscar permissões."
      description: "Retorna lista de todas as permissões."
      operationId: "getRoles"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Permissões retornadas com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/RolesList"
        "400":
          description: "Bad request"
          schema:
            $ref: "#/definitions/EmptyResponse"

  #Users
  /users:
    get:
      tags:
        - "Users"
      summary: "Buscar utilizadores."
      description: "Devolve lista dos utilizadores."
      operationId: "getUsers"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Todos os utilizadores retornados com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/UsersList"
        "400":
          description: "Request inválido!"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /users/{id}:
    get:
      tags:
        - "Users"
      summary: "Buscar utilizador."
      description: "Retrieves information about an user"
      operationId: "getUser"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID do utilizador."
          required: true
          type: "integer"
      responses:
        "200":
          description: "Utilizador retornado com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/User"
        "400":
          description: "Request inválido"
          schema:
            $ref: "#/definitions/EmptyResponse"
    put:
      tags:
        - "Users"
      summary: "Atualizar utilizador."
      description: "Atualiza os dados de um utilizador."
      operationId: "updateUser"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID do utilizador."
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Objeto com dados a atualizar."
          required: true
          schema:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              IBAN:
                type: string
              NIF:
                type: string
      responses:
        "200":
          description: "Utilizador editado com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/User"
        "400":
          description: "Request inválido"
          schema:
            $ref: "#/definitions/EmptyResponse"
    delete:
      tags:
        - "Users"
      summary: "Delete user"
      description: "Deletes an existing user"
      operationId: "deleteUser"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID do utilizador a remover."
          required: true
          type: "integer"
      responses:
        "200":
          description: "Utilizador removido com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/User"
        "400":
          description: "Request inválido"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /users/{id}/update-role:
    put:
      tags:
        - "Users"
      summary: "Atualizar permissão de utilizador."
      description: "Atualiza a permissão de um utilizador."
      operationId: "updateUserRole"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID da permissão."
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Objeto com dados para atualizar a permissão."
          required: true
          schema:
            type: object
            properties:
              role_id:
                type: integer
      responses:
        "200":
          description: "Permissões do utilizador alteradas com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/User"
        "400":
          description: "Request inválido"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /users/{id}/update-password:
    put:
      tags:
        - "Users"
      summary: "Atualizar password."
      description: "Atualiza a password de um utilizador."
      operationId: "updateUserPassword"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID do utilizador."
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Objeto dados para atualizar password."
          required: true
          schema:
            type: object
            properties:
              old_password:
                type: string
              new_password:
                type: string
              new_password_repeat:
                type: string                                
      responses:
        "200":
          description: "Password alterada com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/User"
        "400":
          description: "Request inválido"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /users/{id}/add-contact:
    put:
      tags:
        - "Users"
      summary: "Adicionar contato de utilizador."
      description: "Adiciona um novo contato a um utilizador."
      operationId: "addContactUser"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID do utilizador."
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Objeto com dados do contato."
          required: true
          schema:
            type: object
            properties:
              phone_number:
                type: string
      responses:
        "200":
          description: "Adicionado Contacto ao utilizador com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/User"
        "400":
          description: "Request inválido"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /users/{id}/delete-contact:
    put:
      tags:
        - "Users"
      summary: "Remover contato do utilizador."
      description: "Remove um contato da lista de contatos de um utilizador."
      operationId: "deleteContactUser"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID do utilizador."
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Objeto com id do contato a remover."
          required: true
          schema:
            type: object
            properties:
              contact_id:
                type: integer
      responses:
        "200":
          description: "Contacto do utilizador removido com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/User"
        "400":
          description: "Request inválido"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /users/{id}/update-contact:
    put:
      tags:
        - "Users"
      summary: "Atualizar contato de utilizador."
      description: "Atualiza um contato de um utilizador da sua lista."
      operationId: "updateContactUser"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID do utilizador."
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Objeto com dados para atualizar contato."
          required: true
          schema:
            type: object
            properties:
              contact_id:
                type: integer
              phone_number:
                type: string
      responses:
        "200":
          description: "Contacto do utilizador alterado com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/User"
        "400":
          description: "Failed to update user"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /users/{id}/add-unit:
    put:
      tags:
        - "Users"
      summary: "Adicionar fração a utilizador."
      description: "Adiciona uma fração de um apartamento ao utilizador."
      operationId: "addUnitUser"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID do utilizador."
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Objeto com id da fração a adicionar."
          required: true
          schema:
            type: object
            properties:
              unit_id:
                type: integer
      responses:
        "200":
          description: "Adicionada Fração ao utilizador com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/User"
        "400":
          description: "Failed to update user"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /users/{id}/delete-unit:
    put:
      tags:
        - "Users"
      summary: "Remover fração de utilizador."
      description: "Remove fração de um utilizador."
      operationId: "addUnitUser"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID do utilizador."
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Objeto com id da fração a remover."
          required: true
          schema:
            type: object
            properties:
              unit_id:
                type: integer
      responses:
        "200":
          description: "Fração do utilizador removida com sucesso!"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/User"
        "400":
          description: "Failed to update user"
          schema:
            $ref: "#/definitions/EmptyResponse"

  #Units
  /units:
    get:
      tags:
        - "Units"
      summary: "Get all units"
      description: "Returns array of units"
      operationId: "getUnits"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Retrieved all units successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/UnitsList"
        "400":
          description: "Failed to retrieve all Units"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                type: object
              error:
                type: string
  /units/{id}:
    get:
      tags:
        - "Units"
      summary: "Get unit by id"
      description: "Return a unit"
      operationId: "getUnitById"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of unit to return"
          required: true
          type: "integer"
      responses:
        "200":
          description: "Get specific unit"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/Unit"
        "400":
          description: "Failed to retrieve specific unit"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                type: object
              error:
                type: string
    put:
      tags:
        - "Units"
      summary: "Edit unit"
      description: "Edits an existing unit"
      operationId: "putUnit"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of unit to edit"
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Unit object to edit"
          required: true
          schema:
            type: "object"
            properties:
              unit:
                type: string
      responses:
        "200":
          description: "Updated unit successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/Unit"
        "400":
          description: "Failed to update unit"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
                default: 400
              data:
                type: object
              error:
                type: string

  #ServiceTypes
  /service-type:
    get:
      tags:
        - "ServiceTypes"
      summary: "Get all service types"
      description: "Returns array of service types"
      operationId: "getServiceTypes"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Retrieved all service types successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/ServiceTypeList"
        "400":
          description: "Failed to retrieve all service types"
          schema:
            $ref: "#/definitions/EmptyResponse"
    post:
      tags:
        - "ServiceTypes"
      summary: "Post new service type"
      description: "Creates a new service type"
      operationId: "postServiceType"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Service type object to create a new service type"
          required: true
          schema:
            type: "object"
            properties:
              service_type:
                type: string
                example: "Luz"
      responses:
        "200":
          description: "Service type created successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/ServiceType"
        "400":
          description: "Failed to create service type"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /service-type/{id}:
    get:
      tags:
        - "ServiceTypes"
      summary: "Get service type"
      description: "Retrieves information about a service type"
      operationId: "getServiceType"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of service type to retrieve"
          required: true
          type: "integer"
      responses:
        "200":
          description: "Retrieved service type successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/ServiceType"
        "400":
          description: "Failed to retrieve service type"
          schema:
            $ref: "#/definitions/EmptyResponse"
    put:
      tags:
        - "ServiceTypes"
      summary: "Edit a service type"
      description: "Edits an existing service type"
      operationId: "editServiceType"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of service type to update"
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Service type object edit"
          required: true
          schema:
            type: object
            properties:
              service_type:
                type: string
      responses:
        "200":
          description: "Updated service type successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/User"
        "400":
          description: "Failed to update service type"
          schema:
            $ref: "#/definitions/EmptyResponse"
    delete:
      tags:
        - "ServiceTypes"
      summary: "Delete service type"
      description: "Deletes an existing service type"
      operationId: "deleteServiceType"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of service type to delete"
          required: true
          type: "integer"
      responses:
        "200":
          description: "Removed service type successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/ServiceType"
        "400":
          description: "Failed to remove service type"
          schema:
            $ref: "#/definitions/EmptyResponse"

  #Suppliers
  /suppliers:
    get:
      tags:
        - "Suppliers"
      summary: "Get all suppliers"
      description: "Returns array of suppliers"
      operationId: "getSuppliers"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Retrieved all suppliers successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/SupplierList"
        "400":
          description: "Failed to retrieve all suppliers"
          schema:
            $ref: "#/definitions/EmptyResponse"
    post:
      tags:
        - "Suppliers"
      summary: "Post a supplier"
      description: "Creates a new supplier"
      operationId: "postSupplier"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Service type object to create a new supplier"
          required: true
          schema:
            type: "object"
            properties:
              first_name:
                type: string
              last_name:
                type: string
              company_name:
                type: string
              NIF:
                type: string
              contacts:
                type: array
                items:
                  $ref: "#/definitions/PhoneList"
              service_types:
                type: array
                $ref: "#/definitions/ServiceTypeList"
      responses:
        "200":
          description: "Supplier created successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/Supplier"
        "400":
          description: "Failed to create service type"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /suppliers/{id}:
    get:
      tags:
        - "Suppliers"
      summary: "Get supplier"
      description: "Retrieves information about a supplier"
      operationId: "getSupplier"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of supplier to retrieve"
          required: true
          type: "integer"
      responses:
        "200":
          description: "Retrieved supplier successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/Supplier"
        "400":
          description: "Failed to retrieve supplier"
          schema:
            $ref: "#/definitions/EmptyResponse"
    put:
      tags:
        - "Suppliers"
      summary: "Edit a supplier"
      description: "Edits an existing supplier"
      operationId: "editSupplier"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of supplier to update"
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Supplier object edit"
          required: true
          schema:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              company_name:
                type: string
              NIF:
                type: string
      responses:
        "200":
          description: "Updated supplier successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/Supplier"
        "400":
          description: "Failed to update supplier"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /suppliers/{id}/add-contact:
    put:
      tags:
        - "Users"
      summary: "Add supplier contact"
      description: "Adds a new contact to a supplier"
      operationId: "addContactSupplier"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of supplier to update"
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Contact object to add a contact"
          required: true
          schema:
            type: object
            properties:
              phone_number:
                type: string
      responses:
        "200":
          description: "Updated supplier successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/Supplier"
        "400":
          description: "Failed to update supplier"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /suppliers/{id}/update-contact:
    put:
      tags:
        - "Users"
      summary: "Update supplier contact"
      description: "Updates a contact of a supplier"
      operationId: "updateContactSupplier"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of supplier to update"
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Contact object to update a contact"
          required: true
          schema:
            type: object
            properties:
              phone_number:
                type: string
              id:
                type: integer
      responses:
        "200":
          description: "Updated supplier successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/Supplier"
        "400":
          description: "Failed to update supplier"
          schema:
            $ref: "#/definitions/EmptyResponse"
  #/suppliers/{id}/delete-contact?
  /suppliers/{id}/add-service-type:
    put:
      tags:
        - "Users"
      summary: "Add supplier service type"
      description: "Adds a new service type to a supplier"
      operationId: "addServiceTypeSupplier"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of supplier to update"
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Service type object to add a service type"
          required: true
          schema:
            type: object
            properties:
              service_type_id:
                type: integer
      responses:
        "200":
          description: "Updated supplier successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/Supplier"
        "400":
          description: "Failed to update supplier"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /suppliers/{id1}/delete-service-type:
    put:
      tags:
        - "Users"
      summary: "Delete supplier service type"
      description: "Removes a service type from a supplier"
      operationId: "deleteServiceTypeSupplier"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of supplier to update"
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Service type object to delete service type"
          required: true
          schema:
            type: object
            properties:
              service_type_id:
                type: integer
      responses:
        "200":
          description: "Updated supplier successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/Supplier"
        "400":
          description: "Failed to update supplier"
          schema:
            $ref: "#/definitions/EmptyResponse"

  #Expenses
  /expenses:
    get:
      tags:
        - "Expenses"
      summary: "Get all expenses"
      description: "Returns array of expenses"
      operationId: "getExpenses"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Retrieved all expenses successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/ExpensesList"
        "400":
          description: "Failed to retrieve all expenses"
          schema:
            $ref: "#/definitions/EmptyResponse"
    post:
      tags:
        - "Expenses"
      summary: "Post an expense"
      description: "Creates a new expense"
      operationId: "postExpense"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Expense object to create a new expense"
          required: true
          schema:
            type: "object"
            properties:
              value:
                type: number
              description:
                type: string
              supplier_id:
                type: integer
              payment_date:
                type: string
      responses:
        "200":
          description: "Expense created successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/Expense"
        "400":
          description: "Failed to create service type"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /expenses/{id}:
    get:
      tags:
        - "Expenses"
      summary: "Get expense"
      description: "Retrieves information about an expense"
      operationId: "getExpense"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of expense to retrieve"
          required: true
          type: "integer"
      responses:
        "200":
          description: "Retrieved expense successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/Expense"
        "400":
          description: "Failed to retrieve expense"
          schema:
            $ref: "#/definitions/EmptyResponse"
    put:
      tags:
        - "Expenses"
      summary: "Edit an expense"
      description: "Edits an existing expense"
      operationId: "editExpense"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of expense to update"
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Expense object edit"
          required: true
          schema:
            type: object
            properties:
              value:
                type: number
              description:
                type: string
              supplied_id:
                type: integer
      responses:
        "200":
          description: "Updated expense successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/Expense"
        "400":
          description: "Failed to update expense"
          schema:
            $ref: "#/definitions/EmptyResponse"
    delete:
      tags:
        - "Expenses"
      summary: "Delete expense"
      description: "Deletes an existing expense"
      operationId: "deleteExpense"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of expense to delete"
          required: true
          type: "integer"
      responses:
        "200":
          description: "Removed expense successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/Expense"
        "400":
          description: "Failed to remove Expense"
          schema:
            $ref: "#/definitions/EmptyResponse"

  #PaymentMap
  /payment_map:
    get:
      tags:
        - "PaymentMap"
      summary: "Get all payment maps"
      description: "Returns array of payment maps"
      operationId: "getPaymentMaps"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Retrieved all payment maps successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/PaymentMapsList"
        "400":
          description: "Failed to retrieve all payment maps"
          schema:
            $ref: "#/definitions/EmptyResponse"
    post:
      tags:
        - "PaymentMap"
      summary: "Post a payment map"
      description: "Creates a new payment map"
      operationId: "postPaymentMap"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "PaymentMap object to create a new payment map"
          required: true
          schema:
            type: "object"
            properties:
              value:
                type: string
              description:
                type: string
              name:
                type: string
              unit_ids:
                type: array
                items:
                  type: integer
              is_yearly:
                type: boolean
              year:
                type: string
      responses:
        "200":
          description: "Payment map created successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/PaymentMap"
        "400":
          description: "Failed to create payment map"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /payment_map/{id}:
    get:
      tags:
        - "PaymentMap"
      summary: "Get payment map"
      description: "Retrieves information about a payment map"
      operationId: "getPaymentMap"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of payment map to retrieve"
          required: true
          type: "integer"
      responses:
        "200":
          description: "Retrieved payment map successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/PaymentMapInfo"
        "400":
          description: "Failed to retrieve payment map"
          schema:
            $ref: "#/definitions/EmptyResponse"
    put:
      tags:
        - "PaymentMap"
      summary: "Edit a payment map"
      description: "Edits an existing payment map"
      operationId: "editPaymentMap"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of payment map to update"
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Payment map object edit"
          required: true
          schema:
            type: object
            properties:
              value:
                type: string
              month:
                type: integer
      responses:
        "200":
          description: "Updated payment map successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/PaymentMap"
        "400":
          description: "Failed to update payment map"
          schema:
            $ref: "#/definitions/EmptyResponse"
  /payment_map/{id}/close:
    put:
      tags:
        - "PaymentMap"
      summary: "Close a payment map"
      description: "Edits an existing payment map to be closed"
      operationId: "closePaymentMap"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of payment map to close"
          required: true
          type: "integer"
      responses:
        "200":
          description: "Payment map successfully closed"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/PaymentMap"
        "400":
          description: "Failed to update payment map"
          schema:
            $ref: "#/definitions/EmptyResponse"

  #Revenues
  /revenue:
    get:
      tags:
        - "Revenues"
      summary: "Get all revenues"
      description: "Returns array of revenues"
      operationId: "getRevenues"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Retrieved all revenues successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/RevenuesList"
        "400":
          description: "Failed to retrieve all revenues"
          schema:
            $ref: "#/definitions/EmptyResponse"
    post:
      tags:
        - "Revenues"
      summary: "Post a payment record"
      description: "Creates a new payment record"
      operationId: "postPaymentRecord"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Payment record object to register"
          required: true
          schema:
            type: "object"
            properties:
              payment_map_id:
                type: integer
              unit_id:
                type: integer
              month:
                type: integer
      responses:
        "200":
          description: "Payment record created successfully"
          schema:
            type: object
            properties:
              request:
                type: string
              message:
                type: string
              status:
                type: integer
              data:
                $ref: "#/definitions/Revenue"
        "400":
          description: "Failed to create revenue"
          schema:
            $ref: "#/definitions/EmptyResponse"

  #Others
  #monthly data

definitions:
  TrueResponse:
    type: object
    properties:
      request:
        type: string
      message:
        type: string
      status:
        type: integer
      data:
        type: boolean
  EmptyResponse:
    type: object
    properties:
      request:
        type: string
      message:
        type: string
      status:
        type: integer
      data:
        type: object
      error:
        type: string
  SignInData:
    type: object
    properties:
      id:
        type: integer
      first_name:
        type: string
      last_name:
        type: string
      role_name:
        type: string
      token:
        type: string
  PhoneList:
    type: object
    properties:
      phone_number:
        type: string
        example: "123456789"
  Typology:
    type: object
    properties:
      typology:
        type: string
      permilage:
        type: integer
      id:
        type: integer
  TypologiesList:
    type: array
    items:
      $ref: "#/definitions/Typology"
  Role:
    type: object
    properties:
      role_name:
        type: string
      id:
        type: integer
  RolesList:
    type: array
    items:
      $ref: "#/definitions/Role"
  Unit:
    type: object
    properties:
      unit:
        type: string
      typology:
        $ref: "#/definitions/Typology"
      id:
        type: integer
  UnitsList:
    type: array
    items:
      $ref: "#/definitions/Unit"
  User:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      email:
        type: string
      IBAN:
        type: string
      NIF:
        type: string
      role_name:
        type: string
      units:
        type: array
        items:
          type: string
      contacts:
        $ref: "#/definitions/PhoneList"
  UsersList:
    type: array
    items:
      $ref: "#/definitions/User"
  ServiceType:
    type: object
    properties:
      service_type:
        type: string
      id:
        type: integer
  ServiceTypeList:
    type: array
    items:
      $ref: "#/definitions/ServiceType"
  Supplier:
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
      NIF:
        type: string
      IBAN:
        type: string
      company_name:
        type: string
      id:
        type: integer
      service_types:
        type: array
        items:
          $ref: "#/definitions/ServiceTypeList"
      contacts:
        type: array
        items:
          $ref: "#/definitions/PhoneList"
      expenses:
        type: array
        items:
          $ref: "#/definitions/ExpensesList"
  Expenses:
    type: object
    properties:
      value:
        type: string
      description:
        type: string
      payment_date:
        type: string
      payment_record_date:
        type: string
      supplier:
        $ref: "#/definitions/Supplier"
      id:
        type: integer
  ExpensesList:
    type: array
    items:
      $ref: "#/definitions/Expenses"
  PaymentMap:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string
      yearly:
        type: boolean
      year:
        type: string
      closed:
        type: boolean
  PaymentMapValues:
    type: object
    properties:
      value:
        type: string
      start_date:
        type: string
      reserve_fund:
        type: string
      id:
        type: integer
      end_date:
        type: string
  PaymentMapValuesList:
    type: array
    items:
      $ref: "#/definitions/PaymentMapValues"
  PaymentMapsList:
    type: array
    items:
      $ref: "#/definitions/PaymentMap"
  Revenue:
    type: object
    properties:
      month:
        type: integer
      unit_id:
        type: integer
      unit:
        type: string
      paid:
        type: boolean
      value:
        type: string
  RevenueList:
    type: array
    items:
      $ref: "#/definitions/Revenue"
  PaymentMapInfo:
    type: object
    properties:
      payment_map:
        $ref: "#/definitions/PaymentMap"
      payment_map_values:
        $ref: "#/definitions/PaymentMapValuesList"
      revenues:
        $ref: "#/definitions/RevenueList"
